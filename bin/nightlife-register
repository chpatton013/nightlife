#!/usr/bin/env python3

import argparse
import json
import logging
import sys
import urllib.request

from nightlife.state import PRINCIPAL_LOCKFILE


if __name__ == "__main__":
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s|%(levelname)s] %(message)s",
        datefmt="%Y-%m-%d %H:%M:%S",
    )

    parser = argparse.ArgumentParser()
    parser.add_argument("agent_name")
    parser.add_argument("agent_host")
    parser.add_argument("agent_key_path")
    parser.add_argument("agent_events", nargs="+")
    parser.add_argument("--principal-host")
    parser.add_argument("--principal-lockfile", default=PRINCIPAL_LOCKFILE)
    args = parser.parse_args()

    if args.principal_host is None:
        with open(args.principal_lockfile, "r") as f:
            args.principal_host = f.read()

    agent_key_password: bytes | None = None
    if sys.stdin:
        if sys.stdin.isatty():
            agent_key_password = input(f"Enter decryption password for agent keyfile (or empty if unencrypted):\n$ ").encode()
        else:
            logging.info("Reading agent keyfile decryption password from stdin")
            agent_key_password = sys.stdin.buffer.read()

    if not agent_key_password:
        logging.info("Agent keyfile is assumed to be unencrypted")

    body = {
        "host": args.agent_host,
        "key_path": args.agent_key_path,
        "key_password": agent_key_password,
        "events": args.agent_events,
    }

    url = f"{args.principal_host}/agent/{args.agent_name}"
    logging.info("PUT %s", url)

    request = urllib.request.Request(
        url,
        data=json.dumps(body).encode("utf-8"),
        headers={"Content-Type": "application/json"},
        method="PUT",
    )
    with urllib.request.urlopen(request) as f:
        sys.stdout.buffer.write(f.read())
